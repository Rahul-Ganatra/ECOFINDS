const jwt = require("jsonwebtoken");
const User = require("../models/user");
const redisClient = require("../config/redis");

const userMiddleware = async (req, res, next) => {
  try {
    // Get token from Authorization header
    const authHeader = req.headers.authorization;
    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      throw new Error("Token is not present");
    }

    const token = authHeader.substring(7); // Remove "Bearer " prefix

    const jwtKey = process.env.JWT_KEY || "fallback-jwt-secret-key-for-development";
    const payload = jwt.verify(token, jwtKey);

    const { _id } = payload;

    if (!_id) {
      throw new Error("Invalid token");
    }

    const result = await User.findById(_id);

    if (!result) {
      throw new Error("User Doesn't Exist");
    }

    // Redis ke blockList mein persent toh nahi hai
    try {
      const IsBlocked = await redisClient.exists(`token:${token}`);
      if (IsBlocked) throw new Error("Invalid Token");
    } catch (redisError) {
      console.log("Redis not available, skipping token check:", redisError.message);
      // Continue without Redis check if Redis is not available
    }

    req.user = result; // Changed from req.result to req.user for consistency

    next();
  } catch (err) {
    res.status(401).json({ message: "Authentication failed", error: err.message });
  }
};

module.exports = userMiddleware;
